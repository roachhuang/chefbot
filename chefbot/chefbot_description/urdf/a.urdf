<?xml version="1.0" encoding="utf-8"?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from chefbot_base.xacro             | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!--
    - Base      : kobuki
    - Stacks    : hexagons
    - 3d Sensor : kinect
-->
<robot name="turtlebot">
  <!-- 
  These properties must be observed by any machine
  that wants to be defined as a turtlebot. Refer
  to the REP for more details.    
  http://www.ros.org/reps/rep-0119.html     
  
 ======================================================================
  REP 119 : Rgb camera link relative to the Base link 
 ====================================================================== 
   Base link is currently defined as the rotational centre on the bottom
   of the base mould. For both create and kobuki this is actually exactly
   the same 3d world point. 
   
   This may cause an issue with a base with much different floor clearance.
   Should we be using base_footprint for this specification instead?
   Note: REP needs to be updated with the information below 
   (currently in development and awaiting feedback)
-->
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="green">
    <color rgba="0.0 1.0 0.0 1.0"/>
  </material>
  <material name="grey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="orange">
    <color rgba="1.0 0.423529411765 0.0392156862745 1.0"/>
  </material>
  <material name="brown">
    <color rgba="0.870588235294 0.811764705882 0.764705882353 1.0"/>
  </material>
  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <material name="gold">
    <color rgba="0.854901960784 0.647058823529 0.125490196078 1.0"/>
  </material>
  <!-- Need changes in chefbot base and circle -->
  <!--  <xacro:include filename="$(find create_description)/urdf/create.urdf.xacro"/> 
  <xacro:include filename="$(find kobuki_description)/urdf/kobuki.urdf.xacro" />
-->
  <!-- Stacks -->
  <!--  <xacro:include filename="$(find chefbot_description)/urdf/circles.urdf.xacro"/>  -->
  <!-- <xacro:include filename="$(find chefbot_description)/urdf/stacks/circles.urdf.xacro"/> -->
  <!--  <xacro:include filename="$(find turtlebot_description)/urdf/stacks/hexagons.urdf.xacro"/> -->
  <!-- 3D Sensors -->
  <!-- 
  These properties must be observed by any machine
  that wants to be defined as a turtlebot. Refer
  to the REP for more details.    
  http://www.ros.org/reps/rep-0119.html     
  
 ======================================================================
  REP 119 : Rgb camera link relative to the Base link 
 ====================================================================== 
   Base link is currently defined as the rotational centre on the bottom
   of the base mould. For both create and kobuki this is actually exactly
   the same 3d world point. 
   
   This may cause an issue with a base with much different floor clearance.
   Should we be using base_footprint for this specification instead?
   Note: REP needs to be updated with the information below 
   (currently in development and awaiting feedback)
-->
  <!-- 
    These properties must be observed by any machine
    that wants to be defined as a turtlebot. Refer
    to the REP for more details.
    
    http://www.ros.org/reps/rep-0119.html
   -->
  f.xacro&quot;/&gt;
  
  
  <link name="base_footprint"/>
  <!--
       Base link is set at the bottom of the base mould.
       This is done to be compatible with the way base link
       was configured for turtlebot 1. Refer to
       
       https://github.com/turtlebot/turtlebot/issues/40
       
       To put the base link at the more oft used wheel
       axis, set the z-distance from the base_footprint
       to 0.352.
      -->
  <joint name="base_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.0102"/>
    <parent link="base_footprint"/>
    <child link="base_link"/>
  </joint>
  <link name="base_link">
    <visual>
      <material name="blue"/>
      <geometry>
        <!-- new mesh -->
        <mesh filename="package://chefbot_description/meshes/base_plate.dae"/>
      </geometry>
      <!--        <origin xyz="0.001 0 0.05199" rpy="0 0 ${M_PI/2}"/> -->
      <origin rpy="0 0 1.57079632679" xyz="0.001 0 -0.034"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.10938" radius="0.178"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0.0 0 0.05949"/>
    </collision>
    <inertial>
      <!-- COM experimentally determined -->
      <origin xyz="0.01 0 0"/>
      <mass value="2.4"/>
      <!-- 2.4/2.6 kg for small/big battery pack -->
      <!-- Kobuki's inertia tensor is approximated by a cylinder with homogeneous mass distribution
             More details: http://en.wikipedia.org/wiki/List_of_moment_of_inertia_tensors
             m = 2.4 kg; h = 0.09 m; r = 0.175 m
             ixx = 1/12 * m * (3 * r^2 + h^2)
             iyy = 1/12 * m * (3 * r^2 + h^2)
             izz = 1/2 * m * r^2 
          -->
      <inertia ixx="0.019995" ixy="0.0" ixz="0.0" iyy="0.019995" iyz="0.0" izz="0.03675"/>
    </inertial>
  </link>
  <link name="left_axle_link">
    <inertial>
      <origin xyz="0 -0.035 0.021"/>
      <mass value="0.01"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
    <visual>
      <origin rpy="0 1.5707 1.5707" xyz="0 -0.035 0.021"/>
      <geometry>
        <cylinder length="0.02" radius="0.0045"/>
      </geometry>
      <material name="glod"/>
    </visual>
    <collision>
      <origin rpy="0 1.5707 1.5707" xyz="0 -0.035 0.021"/>
      <geometry>
        <cylinder length="0.00635" radius="0.00635"/>
      </geometry>
    </collision>
  </link>
  <joint name="left_axle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.171475 0.0178"/>
    <parent link="base_link"/>
    <child link="left_axle_link"/>
    <axis xyz="0 1 0"/>
  </joint>
  <link name="right_axle_link">
    <inertial>
      <origin xyz="0 0.035 0.021"/>
      <mass value="0.01"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
    <visual>
      <origin rpy="0 1.5707 1.5707" xyz="0 0.035 0.02"/>
      <geometry>
        <cylinder length="0.002" radius="0.0045"/>
      </geometry>
      <material name="gold"/>
    </visual>
    <collision>
      <origin rpy="0 1.5707 1.5707" xyz="0 0.035 0.02"/>
      <geometry>
        <cylinder length="0.002" radius="0.0045"/>
      </geometry>
    </collision>
  </link>
  <joint name="right_axle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 -0.171475 0.0178"/>
    <parent link="base_link"/>
    <child link="right_axle_link"/>
    <axis xyz="0 1 0"/>
  </joint>
  <link name="left_wheel_link">
    <inertial>
      <origin xyz="0 -0.035 0.021"/>
      <mass value="0.01"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
    <visual>
      <origin rpy="0 1.5707 1.5707" xyz="0 -0.035 0.021"/>
      <geometry>
        <cylinder length="0.02" radius="0.045"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="0 1.5707 1.5707" xyz="0 -0.035 0.021"/>
      <geometry>
        <cylinder length="0.03175" radius="0.0762"/>
      </geometry>
    </collision>
  </link>
  <!-- Fixed because we never rotate it anyway, it is just for show -->
  <!-- NOTE This may prevent gazebo from working with this model -->
  <joint name="left_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0 0.01905 0"/>
    <parent link="left_axle_link"/>
    <child link="left_wheel_link"/>
    <axis xyz="0 1 0"/>
  </joint>
  <link name="right_wheel_link">
    <inertial>
      <origin xyz="0 0.035 0.021"/>
      <mass value="0.01"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
    <visual>
      <origin rpy="0 1.5707 1.5707" xyz="0 0.035 0.021"/>
      <geometry>
        <cylinder length="0.02" radius="0.045"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="0 1.5707 1.5707" xyz="0 0.035 0.021"/>
      <geometry>
        <cylinder length="0.02" radius="0.045"/>
      </geometry>
    </collision>
  </link>
  <!-- Fixed because we never rotate it anyway, it is just for show -->
  <!-- NOTE This may prevent gazebo from working with this model -->
  <joint name="right_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0 -0.01905 0"/>
    <parent link="right_axle_link"/>
    <child link="right_wheel_link"/>
    <axis xyz="0 1 0"/>
  </joint>
  <joint name="caster_front_joint" type="fixed">
    <parent link="base_link"/>
    <child link="chefbot_caster_front_link"/>
    <origin rpy="-1.57079632679 0 0" xyz="0.115 0.0 0.007"/>
  </joint>
  <link name="chefbot_caster_front_link">
    <collision>
      <geometry>
        <cylinder length="0.0176" radius="0.017"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.01"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="chefbot_caster_back_joint" type="fixed">
    <parent link="base_link"/>
    <child link="chefbot_caster_back_link"/>
    <origin rpy="-1.57079632679 0 0" xyz="-0.135 0.0 0.009"/>
  </joint>
  <link name="chefbot_caster_back_link">
    <collision>
      <geometry>
        <cylinder length="0.0176" radius="0.017"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.01"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <!-- Kobuki's sensors -->
  <joint name="gyro_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 0 0" xyz="0.056 0.062 0.0202"/>
    <parent link="base_link"/>
    <child link="gyro_link"/>
  </joint>
  <link name="gyro_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.01"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="cliff_sensor_left_joint" type="fixed">
    <origin rpy="0 1.57079632679 0" xyz="0.08734 0.13601 0.0214"/>
    <parent link="base_link"/>
    <child link="cliff_sensor_left_link"/>
  </joint>
  <link name="cliff_sensor_left_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.01"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="cliff_sensor_right_joint" type="fixed">
    <origin rpy="0 1.57079632679 0" xyz="0.085 -0.13601 0.0214"/>
    <parent link="base_link"/>
    <child link="cliff_sensor_right_link"/>
  </joint>
  <link name="cliff_sensor_right_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.01"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="cliff_sensor_front_joint" type="fixed">
    <origin rpy="0 1.57079632679 0" xyz="0.156 0.00 0.0214"/>
    <parent link="base_link"/>
    <child link="cliff_sensor_front_link"/>
  </joint>
  <link name="cliff_sensor_front_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.01"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <!-- Kobuki Gazebo simulation details
    <kobuki_sim />
    -->
  <stack_hexagons parent="base_link"/>
  <joint name="camera_rgb_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.087 -0.0125 0.287"/>
    <parent link="base_link"/>
    <child link="camera_rgb_frame"/>
  </joint>
  <link name="camera_rgb_frame">
    <inertial>
      <mass value="0.001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
  <joint name="camera_rgb_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="camera_rgb_frame"/>
    <child link="camera_rgb_optical_frame"/>
  </joint>
  <link name="camera_rgb_optical_frame">
    <inertial>
      <mass value="0.001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
  <joint name="camera_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.031 0.0125 -0.016"/>
    <parent link="camera_rgb_frame"/>
    <child link="camera_link"/>
  </joint>
  <link name="camera_link">
    <visual>
      <origin rpy="0 0 1.57079632679" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://turtlebot_description/meshes/sensors/kinect.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <box size="0.07271 0.27794 0.073"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
  <!-- The fixed joints & links below are usually published by static_transformers launched by the OpenNi launch 
       files. However, for Gazebo simulation we need them, so we add them here.
       (Hence, don't publish them additionally!) -->
  <joint name="camera_depth_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.025 0"/>
    <parent link="camera_rgb_frame"/>
    <child link="camera_depth_frame"/>
  </joint>
  <link name="camera_depth_frame">
    <inertial>
      <mass value="0.001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
  <joint name="camera_depth_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="camera_depth_frame"/>
    <child link="camera_depth_optical_frame"/>
  </joint>
  <link name="camera_depth_optical_frame">
    <inertial>
      <mass value="0.001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
  <gazebo reference="camera_link">
    <sensor name="camera" type="depth">
      <always_on>true</always_on>
      <update_rate>20.0</update_rate>
      <camera>
        <horizontal_fov>1.0471975512</horizontal_fov>
        <image>
          <format>B8G8R8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.05</near>
          <far>8.0</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="kinect_camera_controller">
        <cameraName>camera</cameraName>
        <alwaysOn>true</alwaysOn>
        <updateRate>10</updateRate>
        <imageTopicName>rgb/image_raw</imageTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
        <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
        <frameName>camera_depth_optical_frame</frameName>
        <baseline>0.1</baseline>
        <distortion_k1>0.0</distortion_k1>
        <distortion_k2>0.0</distortion_k2>
        <distortion_k3>0.0</distortion_k3>
        <distortion_t1>0.0</distortion_t1>
        <distortion_t2>0.0</distortion_t2>
        <pointCloudCutoff>0.4</pointCloudCutoff>
      </plugin>
    </sensor>
  </gazebo>
</robot>

